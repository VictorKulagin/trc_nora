<?php
/**
 * Created by PhpStorm.
 * User: gerasinig
 * Date: 24.08.15
 * Time: 16:16
 */

namespace frontend\models;

use common\models\Mailings;
use Yii;
use yii\base\Model;
use yii\db\ActiveRecord;
use yii\helpers\Html;
use yii\web\Controller;
/*use yii\db\Query;
use yii\data\Pagination;
use yii\web\NotFoundHttpException;
use frontend\models\ContentCategories;*/

/**
 * This is the model class for table "content_categories".
 *
 * @property string $name
 * @property string $phone
 * @property string $time_end
 * @property string $time_start
 * @property string $form_time
 * @property string $form_end_time
 * @property string $form_date
 * @property string $form_end_date
 */
class StageRental extends ActiveRecord
{
    public $form_time;
    public $form_end_time;
    public $form_date;
    public $form_end_date;

    const STATUS_FREE = 0;
    const STATUS_BUSY = 1;

    public function listStatuses()
    {
        return [
            self::STATUS_FREE => 'Свободно',
            self::STATUS_BUSY => 'Занято'
        ];
    }

    public function listTimes()
    {
        return [
            '10:00',
            '11:00',
            '12:00',
            '13:00',
            '14:00',
            '15:00',
            '16:00',
            '17:00',
            '18:00',
            '19:00',
            '20:00',
        ];
    }

    public function sendMail()
    {
        $emailAdmin = Mailings::find()->where(['name_form' => 'StageRental'])->one();
        $mails = $emailAdmin->mails;

        Yii::$app->mailer
            ->compose('stageRental', ['model' => $this])
            ->setFrom($mails)
            ->setTo($mails)
            ->setSubject('Аренда сцены')
            ->send();
    }
    
    #########
    
    public static function tableName()
    {
        return '{{stage_rental}}';
    }

    public function rules()
    {
        return[
            [['name', 'phone', 'email', 'time_start'], 'required'],
            //[['name', 'date' , 'time'], 'required'],
            ['email', 'email'],
            ['number_participants', 'number'],
            ['time_end', 'string'],
            [['description', 'form_time', 'form_end_time', 'form_date', 'form_end_date'], 'string'],
            [['description', 'time_start', 'time_end'], 'safe'],
            ['status', 'number'],
        ];
    }

    public function attributeLabels()
    {
        return [
            'name' => 'Имя',
            'phone' => 'Телефон',
            'email' => 'Электронная почта',
            //'numberParticipants' => 'Количество участников',
            'description' => 'Описание мероприятия',
            'number_participants' => 'Количество участников',
            'form_date' => 'Начальная дата',
            'form_time' => 'Начальное время',
            'form_end_date' => 'Конечная дата',
            'form_end_time' => 'Конечное время',

            'status' => 'Статус'
        ];
    }

    public static function getStatusStageRental()
    {
        return $stageRental = StageRental::find()->where(['status' => 1])->all();
    }

    public function beforeValidate()
    {
        $this->time_start = "{$this->form_date} {$this->form_time}:00";
        $this->time_end = "{$this->form_end_date} {$this->form_end_time}:00";

        return parent::beforeValidate();
    }

//    public function beforeValidate()
//    {
//        if ($this->time_start !== null) {
//            $this->form_time = date('H:i', strtotime($this->time_start));
//            $this->form_date = date('Y-m-d', strtotime($this->time_start));
//        }
//
//        if ($this->time_end !== null) {
//            $this->form_end_time = date('H:i', strtotime($this->time_end));
//            $this->form_end_date = date('Y-m-d', strtotime($this->time_end));
//        }
//
//        parent::afterFind(); // TODO: Change the autogenerated stub
//    }

    public function afterFind()
    {
        if ($this->time_start !== null) {
            $this->form_time = date('H:i', strtotime($this->time_start));
            $this->form_date = date('Y-m-d', strtotime($this->time_start));
        }

        if ($this->time_end !== null) {
            $this->form_end_time = date('H:i', strtotime($this->time_end));
            $this->form_end_date = date('Y-m-d', strtotime($this->time_end));
        }

        parent::afterFind(); // TODO: Change the autogenerated stub
    }


} 